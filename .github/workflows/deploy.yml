name: Build, Push, and Deploy to AWS ECS

on:
  push:
    branches: [main]

jobs:
  backend:
    name: Build, Push Backend Image and Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build backend Docker image
        run: docker build -t backend ./backend

      - name: Tag backend Docker image
        run: |
          BACKEND_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_BACKEND }}
          docker tag backend $BACKEND_REPO:latest

      - name: Push backend Docker image to ECR
        run: |
          BACKEND_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_BACKEND }}
          docker push $BACKEND_REPO:latest

      - name: Deploy backend to ECS
        run: |
          CLUSTER_NAME="your-backend-cluster"
          SERVICE_NAME="your-backend-service"
          TASK_FAMILY="your-backend-task-family"
          REGION=${{ secrets.AWS_REGION }}

          # Update ECS service to force new deployment
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $REGION

  frontend:
    name: Build, Push Frontend Image and Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build frontend Docker image
        run: docker build -t frontend ./webapp

      - name: Tag frontend Docker image
        run: |
          FRONTEND_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_FRONTEND }}
          docker tag frontend $FRONTEND_REPO:latest

      - name: Push frontend Docker image to ECR
        run: |
          FRONTEND_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_FRONTEND }}
          docker push $FRONTEND_REPO:latest

      - name: Deploy frontend to ECS
        run: |
          CLUSTER_NAME="your-frontend-cluster"
          SERVICE_NAME="your-frontend-service"
          TASK_FAMILY="your-frontend-task-family"
          REGION=${{ secrets.AWS_REGION }}

          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $REGION
